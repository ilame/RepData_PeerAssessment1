mkdir HelloWorld.md
touch HelloWorld.md
## This is a markdown file
## This is a markdown file
## This is a markdown file
## This is a markdown file
install.packages("KernSmooth")
getwd()
dir
cd
source("cachematrix.R")
LS
ls
cd
dir
getwd()
getwd()
source("cachematrix.R")
load("C:/Users/maroc/Desktop/Coursera/ProgrammingAssignment2/cachematrix.R")
source("cachematrix.R")
load("C:/Users/maroc/Desktop/Coursera/ProgrammingAssignment2/cachematrix.R")
load("C:/Users/maroc/Desktop/Coursera/ProgrammingAssignment2/cachematrix.R")
source("cachematrix.R")
n=length(typos.draft2)
typos.draft1 = c(2,3,0,3,1,0,0,1)
n=length(typos.draft2)
n=length(typos.draft1)
pages = 1:n
pages
pages[typos.draft1 == 3]
seq()
?seq
a:b
seq(a,b,1)
seq(1,n,1)
(1:length(typos.draft2))[typos.draft2 == max(typos.draft2)]
(1:length(typos.draft1))[typos.draft1 == max(typos.draft1)]
x = c(45,43,46,48,51,46,50,47,46,45)
x = c(x,48,49,51,50,49,41,40,38,35,40)
X
x
day=5
mean(x[day:(day+4)]
mean(x[day:(day+4)])
mean(x[day:(day+4)])
cummax(x)
cummin(x)
whale = c(74, 122, 235, 111, 292, 111, 211, 133, 156, 79)
mean(whale)
var(whale)
std(whale)
sqrt(var(whale))
sqrt(sum((whale - mean(whale))^2/(length(whale)-1)))
std=function(x)sqrt(var(x))
std(whale)
sd(whale)
miles = c(65311, 65624, 65908, 66219, 66499, 66821, 67145, 67447)
x = diff(miles)
x
max(x)
mean(x)
min(x)
com = c(17, 16, 20, 24, 22, 15, 21, 15, 17, 22)
com[4]=18
COM
com
com[>=20]
com[>= 20]
sum( com[>= 20])
sum( com >= 20)
sum( com <17)
sum( com <17)/length(com)
x = c(1,3,5,7,9)
y = c(2,3,5,7,11,13)
x+1
y
y*2
length(x)
length(y)
x+y
sum(x>5)
sum(x[x>5])
sum(x>5 | x<3)
sum(x>5 & x<3)
y[-3]
y[x]
y[y>=7]
x = c(1, 8, 2, 6, 3, 8, 5, 5, 5, 5)
mean(x)
sum(x)/10
log(x[1])
log(x[2])
log(x[3])
log(x[4])
log(x[5])
log(x[6])
log(x[7])
log(x[8])
log(x[9])
log(x[10])
for i in 1:10 {
for i in 1:10 { y[i]<- (x[i] - 4.4)/2.875 }
i=as.numeric()
for i in 1:10 { y[i]<- (x[i] - 4.4)/2.875 }
range(x)
for i in 1:10 do { y[i]<- (x[i] - 4.4)/2.875 }
id=1:10
for i in id do { y[i]<- (x[i] - 4.4)/2.875 }
for (i in id) do { y[i]<- (x[i] - 4.4)/2.875 }
max(x) - min(x)
beer=scan()
barplot(beer)
barplot(table(beer))
barplot(table(beer))/length(beer))
barplot(table(beer)/length(beer))
beer.counts = table(beer)
pie(beer.counts)
names(beer.counts) = c("domestic\n can","Domestic\n bottle",
"Microbrew","Import")
pie(beer.counts)
pie(beer.counts,col=c("purple","green2","cyan","white"))
sals = scan()
mean(sals)
var(sals)
sd(sals)
median(sals)
fivenum(sals)
summary(sals)
mean(sals,trim=1/10)
mean(sals,trim=2/10)
mean(sals,trim=1/2)
?stem
scores=scan()
stem(scores)
stem(scores,scale=2)
q()
sals = c(12, .4, 5, 2, 50, 8, 3, 1, 4, .25)
cats = cut(sals,breaks=c(0,1,5,max(sals)))
cats
table(cats)
levels(cats) = c("poor","rich","rolling in it")
table(cats)
x=scan()
hist(x)
hist(x,probability=TRUE)
hist(x,probability=TRUE)
hist(x)
hist(x,probability=TRUE)
hist(x)
rug(jitter(x))
hist(x,probability=TRUE)
rug(jitter(x))
q()
setwd("C:/Users/maroc/Desktop/Coursera/RR-Project1/repdata-data-activity")
library(data.table)
library(ggplot2)
rdata <- read.csv("activity.csv", colClasses = c("numeric","character","numeric"))
head(rdata)
rdata$date <- as.Date(rdata$date, format = "%Y-%m-%d")
str(rdata)
steps_per_day <- aggregate(steps ~ date, rdata, "sum")
colnames(steps_per_day) <- c("date","steps")
head(steps_per_day)
hist(steps_per_day$steps,col="red", main="Total Steps Taken Each Day",xlab="Total steps per day")
steps_mean   <- mean(steps_per_day$steps, na.rm=TRUE)
steps_median <- median(steps_per_day$steps, na.rm=TRUE)
steps_per_interval <- aggregate(steps ~ interval, rdata, "mean",na.rm=TRUE)
colnames(steps_per_interval) <- c("interval", "steps")
plot(steps_per_interval$interval, steps_per_interval$steps, type="l", xlab="5-min interval", ylab="Average across all days",main="Average number of steps taken",col="red")
ggplot(steps_per_interval, aes(x=interval, y=steps)) +
geom_line(color="orange", size=1) +
labs(title="Average Daily Activity Pattern", x="Interval", y="Number of steps") +
theme_bw()
max_steps <- which.max(steps_per_interval$steps)
steps_per_interval[max_steps, ]
activity_NA <-sum(is.na(rdata$steps))
activity_NA
new_rdata<-rdata
for (i in 1:nrow(new_rdata)){
if (is.na(new_rdata$steps[i])){
interval_val <- new_rdata$interval[i]
row_id <- which(steps_per_interval$interval == interval_val)
steps_val <- steps_per_interval$steps[row_id]
new_rdata$steps[i] <- steps_val
}
}
steps_per_day_imputed <- aggregate(steps ~ date, new_rdata, sum)
hist(steps_per_day_imputed$steps, col=1, main="(Imputed) Histogram of total number of steps per day", xlab="Total number of steps in a day")
steps_mean_imputed   <- mean(steps_per_day_imputed$steps)
steps_median_imputed <- median(steps_per_day_imputed$steps)
new_rdata$date <- as.Date(new_rdata$date, format = "%Y-%m-%d")
new_rdata$day <- weekdays(new_rdata$date)
new_rdata$day_type <- c("weekday")
for (i in 1:nrow(new_rdata)){
if (new_rdata$day[i] == "Samedi" || new_rdata$day[i] == "dimanche"){
new_rdata$day_type[i] <- "weekend"
}
}
new_rdata$day_type <- as.factor(new_rdata$day_type)
interval_steps_imputed <- aggregate(steps ~ interval+day_type, new_rdata, "mean")
interval_steps_imputed$interval <- as.numeric(as.character(interval_steps_imputed$interval))
